{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,yBAChCC,EAAkBF,SAASC,cAAc,kBACzCE,EAAYH,SAASC,cAAc,iBACnCG,EAAcJ,SAASC,cAAc,mBACrCI,EAAsBL,SAASC,cAAc,wBAE/CK,GAAiB,EACjBC,EAAe,EAwBnB,SAASC,EAAwBC,EAAUC,EAAaC,GACjDL,IAIDG,EAAWC,EAEbX,EAAOa,UAAW,EA7BtB,SAAuBH,EAAUI,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACJX,IAGiBY,KAAKC,SAAW,IAEpCC,EAAAvB,GAASwB,OAAOC,QACd,uBAAwCC,OAAfd,EAAS,QAAYc,OAANV,EAAM,OAEhDE,EAAQ,CAAEN,WAAUI,YAEpBO,EAAAvB,GAASwB,OAAOG,QACd,sBAAuCD,OAAfd,EAAS,QAAYc,OAANV,EAAM,OAE/CG,EAAO,CAAEP,WAAUI,W,GAEpBA,E,IAeLY,CAAchB,EAAUF,GACrBmB,MAAK,SAAAC,G,IAAGC,EAAQD,EAARlB,SAAUI,EAAKc,EAALd,MACjBgB,QAAQC,IAAI,uBAAwCP,OAAfK,EAAS,QAAYL,OAANV,EAAM,M,IAE3DkB,OAAM,SAAAJ,G,IAAGC,EAAQD,EAARlB,SAAUI,EAAKc,EAALd,MAClBgB,QAAQC,IAAI,sBAAqCP,OAAfK,EAAS,QAAYL,OAANV,EAAM,M,IAExDmB,SAAQ,WACPzB,GAAgBI,EAChBH,EAAwBC,EAAW,EAAGC,EAAaC,E,KAIzDZ,EAAOkC,iBAAiB,SAAS,SAAAC,GAC/BA,EAAMC,iBACN,IAAMC,EAAkBC,SAASnC,EAAgBoC,OAC3C3B,EAAY0B,SAASlC,EAAUmC,OAC/B5B,EAAc2B,SAASjC,EAAYkC,OAEzC/B,EAAe6B,EACf9B,GAAiB,EACjBP,EAAOa,UAAW,EAElBJ,EAAwB,EAAGE,EAAaC,E,IAG1CN,EAAoB4B,iBAAiB,SAAS,WAC5C3B,GAAiB,EACjBP,EAAOa,UAAW,C","sources":["src/tasks/4_timer_and_promises/js/promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst button = document.querySelector('[data-start-promises]');\nconst firstDelayInput = document.querySelector('[name=\"delay\"]');\nconst stepInput = document.querySelector('[name=\"step\"]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst resetPromisesButton = document.querySelector('[data-promises-stop]');\n\nlet createPromises = true;\nlet currentDelay = 0;\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (!createPromises) {\n        return;\n      }\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n        resolve({ position, delay });\n      } else {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction createPromisesRecursive(position, amountValue, stepValue) {\n  if (!createPromises) {\n    return; // Stop creating promises\n  }\n\n  if (position > amountValue) {\n    // All promises created\n    button.disabled = false;\n    return;\n  }\n\n  createPromise(position, currentDelay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    })\n    .finally(() => {\n      currentDelay += stepValue;\n      createPromisesRecursive(position + 1, amountValue, stepValue);\n    });\n}\n\nbutton.addEventListener('click', event => {\n  event.preventDefault();\n  const firstDelayValue = parseInt(firstDelayInput.value);\n  const stepValue = parseInt(stepInput.value);\n  const amountValue = parseInt(amountInput.value);\n\n  currentDelay = firstDelayValue;\n  createPromises = true;\n  button.disabled = true;\n\n  createPromisesRecursive(1, amountValue, stepValue);\n});\n\nresetPromisesButton.addEventListener('click', () => {\n  createPromises = false;\n  button.disabled = false;\n});\n"],"names":["$6JpON","parcelRequire","$8ab8080c9381c85d$var$button","document","querySelector","$8ab8080c9381c85d$var$firstDelayInput","$8ab8080c9381c85d$var$stepInput","$8ab8080c9381c85d$var$amountInput","$8ab8080c9381c85d$var$resetPromisesButton","$8ab8080c9381c85d$var$createPromises","$8ab8080c9381c85d$var$currentDelay","$8ab8080c9381c85d$var$createPromisesRecursive","position","amountValue","stepValue","disabled","delay","Promise","resolve","reject","setTimeout","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$8ab8080c9381c85d$var$createPromise","then","param","_$position","console","log","catch","finally","addEventListener","event","preventDefault","firstDelayValue","parseInt","value"],"version":3,"file":"timer_and_promises.b63676f2.js.map"}